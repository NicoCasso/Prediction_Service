import sqlmodel
import sqlmodel
"""SQL server version

Revision ID: 8a4803e2bcaf
Revises: 
Create Date: 2025-03-06 14:18:49.849762

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
import sqlmodel


# revision identifiers, used by Alembic.
revision: str = '8a4803e2bcaf'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('username', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('email', sa.String(length=255), nullable=False),
    sa.Column('password_hash', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('role', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_users_email'), 'users', ['email'], unique=True)
    op.create_table('valid_tokens',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('expires', sa.DateTime(), nullable=False),
    sa.Column('token', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('loan_requests',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('state', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('bank', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('naics', sa.Integer(), nullable=False),
    sa.Column('term', sa.Integer(), nullable=False),
    sa.Column('no_emp', sa.Integer(), nullable=False),
    sa.Column('new_exist', sa.Integer(), nullable=False),
    sa.Column('create_job', sa.Integer(), nullable=False),
    sa.Column('retained_job', sa.Integer(), nullable=False),
    sa.Column('urban_rural', sa.Integer(), nullable=False),
    sa.Column('rev_line_cr', sa.Integer(), nullable=False),
    sa.Column('low_doc', sa.Integer(), nullable=False),
    sa.Column('gr_appv', sa.Integer(), nullable=False),
    sa.Column('recession', sa.Integer(), nullable=False),
    sa.Column('has_franchise', sa.Integer(), nullable=False),
    sa.Column('approval_status', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('loan_requests')
    op.drop_table('valid_tokens')
    op.drop_index(op.f('ix_users_email'), table_name='users')
    op.drop_table('users')
    # ### end Alembic commands ###
